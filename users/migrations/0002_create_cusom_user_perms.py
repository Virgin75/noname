# Generated by Django 4.2.4 on 2023-12-05 22:27

from django.db import migrations
from django.conf import settings
from django.apps.registry import Apps, apps as global_apps
from django.contrib.contenttypes.management import create_contenttypes


def add_custom_permissions(apps: Apps, schema_editor):
    """Create default perms used throughout the app on 'post_migrate' signal."""
    create_contenttypes(app_config=global_apps.get_app_config("users"))
    ContentType = apps.get_model("contenttypes", "ContentType")
    Permission = apps.get_model("auth", "Permission")
    ct = ContentType.objects.get(app_label="users", model="account")
    app_perms = ["contacts", "pages", "products", "emails"] + settings.PLUGIN_APPS
    for app in app_perms:
        Permission.objects.get_or_create(
            name=f"Can access {app} page.", codename=f"{app}_full_access", content_type=ct
        )
        Permission.objects.get_or_create(
            name=f"Can access {app} page.", codename=f"{app}_read_only_access", content_type=ct
        )

    # Special permissions (not app related)
    Permission.objects.get_or_create(
        name="Can use the export feature.", codename="extra_can_export", content_type=ct
    )
    Permission.objects.get_or_create(
        name="Can edit the Company settings and invite new members.",
        codename="extra_company_admin",
        content_type=ct,
    )


class Migration(migrations.Migration):
    dependencies = [
        ("users", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(add_custom_permissions, hints={"model_name": "account"}),
    ]
