from django.contrib.auth.mixins import LoginRequiredMixin
from django.views.generic import ListView, TemplateView

from commons.filters import ExportFilter
from commons.models import ExportLog


class HomeView(TemplateView, LoginRequiredMixin):
    template_name = "commons/home.html"


class FilterMixin:
    filterset_class = None

    def get_context_data(self, **kwargs) -> dict:
        context = super().get_context_data(**kwargs)
        extra_context = {}
        filterset = self.filterset_class(self.request.GET, queryset=self.get_queryset(), request=self.request)
        page = self.request.GET.get("page", 1)
        extra_context["paginated_objects"] = self.get_paginator(filterset.qs, self.paginate_by).get_page(page)
        _, page_obj, _, _ = self.paginate_queryset(filterset.qs, self.paginate_by)
        extra_context["page_obj"] = page_obj
        context["existing_obj"] = True if self.get_queryset().first() else False
        context["filter"] = filterset
        context["active_filters"] = len(
            {k: v for k, v in self.request.GET.items() if k not in ("page", "order_by", "name") and v not in ("", None)}
        )
        context["has_any_filters"] = (
            True
            if {k: v for k, v in self.request.GET.items() if k not in ("order_by", "page") and v not in ("", None)}
            else False
        )
        filterset.form.active_filters = context["active_filters"]
        return context | extra_context


class ListExport(FilterMixin, LoginRequiredMixin, ListView):
    """List all the export file generated by the user's company."""

    template_name = "commons/list_exports.html"
    filterset_class = ExportFilter
    paginate_by = 10

    def get_queryset(self):
        return ExportLog.objects.filter(belongs_to=self.request.user.company).order_by("-id")

    def get_context_data(self, **kwargs):
        """Pass extra data to the template: fields names and filtered queryset."""
        context = super().get_context_data(**kwargs)
        context["fields"] = {
            "": None,
            "Date": "sticky",
            "Export type": "sticky",
            "File name": "sticky",
            "Status": None,
            "File size": None,
            "Generated by": None,
        }
        return context
